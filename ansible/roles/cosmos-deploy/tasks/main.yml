---
- name: Clone COSMOS repository
  git:
    repo: "{{ cosmos_repo }}"
    dest: "{{ cosmos_home }}"
    version: "{{ cosmos_version | default('main') }}"
    force: yes
  become_user: "{{ cosmos_user }}"
  when: cosmos_deployment_method | default('git') == 'git'

- name: Copy COSMOS project (file-based deployment)
  copy:
    src: "/workspaces/cosmos-project/"
    dest: "{{ cosmos_home }}/"
    owner: "{{ cosmos_user }}"
    group: "{{ cosmos_user }}"
    mode: preserve
  when: cosmos_deployment_method | default('git') == 'file_copy'

- name: Set ownership for copied files
  file:
    path: "{{ cosmos_home }}"
    owner: "{{ cosmos_user }}"
    group: "{{ cosmos_user }}"
    recurse: yes
  when: cosmos_deployment_method | default('git') == 'file_copy'

- name: Make openc3.sh executable
  file:
    path: "{{ cosmos_home }}/openc3.sh"
    mode: '0755'

- name: Stop existing COSMOS services
  command: ./openc3.sh stop
  args:
    chdir: "{{ cosmos_home }}"
  become_user: "{{ cosmos_user }}"
  ignore_errors: yes
  when: cosmos_deploy_cosmos | default(false)

- name: Build COSMOS containers
  command: ./openc3.sh build
  args:
    chdir: "{{ cosmos_home }}"
  become_user: "{{ cosmos_user }}"
  when: (cosmos_build | default(true)) and (cosmos_deploy_cosmos | default(false))

- name: Deploy COSMOS
  command: "./openc3.sh run {{ cosmos_environment }}"
  args:
    chdir: "{{ cosmos_home }}"
  become_user: "{{ cosmos_user }}"
  when: cosmos_deploy_cosmos | default(false)

- name: Wait for COSMOS to start
  wait_for:
    port: 2900
    host: "{{ inventory_hostname }}"
    delay: 30
    timeout: 300
  when: cosmos_deploy_cosmos | default(false)