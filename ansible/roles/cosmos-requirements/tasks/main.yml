---
- name: Update package cache
  package:
    update_cache: yes
  when: not (cosmos_skip_docker_install | default(false))

- name: Add Docker's official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: not (cosmos_skip_docker_install | default(false))
  ignore_errors: yes

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  when: not (cosmos_skip_docker_install | default(false))
  ignore_errors: yes

- name: Install Docker packages
  package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: present
    update_cache: yes
  when: not (cosmos_skip_docker_install | default(false))
  ignore_errors: yes  # Allow to continue if Docker already installed

- name: Check if docker-proxy exists
  stat:
    path: /usr/bin/docker-proxy
  register: docker_proxy_check

- name: Start and enable Docker
  systemd:
    name: docker
    state: started
    enabled: yes
  when: not (cosmos_skip_docker_install | default(false))
  ignore_errors: yes  # Allow to continue if Docker already running

- name: Create cosmos user
  user:
    name: "{{ cosmos_user }}"
    home: "{{ cosmos_home }}"
    shell: /bin/bash
    create_home: yes
    system: no
  when: cosmos_user != (ansible_user | default('root'))

- name: Add cosmos user to docker group
  user:
    name: "{{ cosmos_user }}"
    groups: docker
    append: yes
  when: cosmos_user != (ansible_user | default('root'))

- name: Add deployment user to cosmos group (for development access)
  user:
    name: "{{ ansible_user | default('root') }}"
    groups: "{{ cosmos_user }}"
    append: yes
  when: cosmos_user != (ansible_user | default('root'))

- name: Set up sudo access for cosmos user (production deployments)
  lineinfile:
    path: /etc/sudoers.d/cosmos
    line: "{{ cosmos_user }} ALL=(ALL) NOPASSWD: /usr/bin/docker, /usr/bin/docker-compose"
    create: yes
    mode: '0440'
  when: cosmos_user != (ansible_user | default('root')) and (cosmos_environment | default('dev')) != 'dev'

- name: Create cosmos directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ cosmos_user }}"
    group: "{{ cosmos_user }}"
    mode: '0755'
  loop:
    - "{{ cosmos_home }}"
    - "{{ cosmos_home }}/logs"
    - "{{ cosmos_home }}/data"