apiVersion: apps/v1
kind: Deployment
metadata:
  name: cosmos-minio
  namespace: cosmos
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cosmos-minio
  template:
    metadata:
      labels:
        app: cosmos-minio
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: minio
        image: docker.io/openc3inc/openc3-minio:6.4.2
        ports:
        - containerPort: 9000
        - containerPort: 9001
        command: ["minio", "server", "--address", ":9000", "--console-address", ":9001", "/data"]
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            configMapKeyRef:
              name: cosmos-config
              key: OPENC3_BUCKET_USERNAME
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: cosmos-config
              key: OPENC3_BUCKET_PASSWORD
        - name: MINIO_BROWSER_REDIRECT_URL
          value: "http://openc3.com/minio"
        - name: SSL_CERT_FILE
          value: "/devel/cacert.pem"
        envFrom:
        - configMapRef:
            name: cosmos-config
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: minio-data
          mountPath: /data
        - name: cacert
          mountPath: /devel/cacert.pem
          subPath: cacert.pem
          readOnly: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: cosmos-bucket-pvc
      - name: cacert
        configMap:
          name: cacert-config
---
apiVersion: v1
kind: Service
metadata:
  name: openc3-minio
  namespace: cosmos
spec:
  selector:
    app: cosmos-minio
  ports:
  - name: api
    port: 9000
    targetPort: 9000
  - name: console
    port: 9001
    targetPort: 9001